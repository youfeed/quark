import{e as s,o as a,C as n}from"./vendor.e7290a2d.js";const l={class:"markdown-body"},p=[n('<h1>快速上手</h1><h2>预览</h2><blockquote><p>扫描下方二维码体验，体验 Cubeshop 组件库示例</p></blockquote><img src="https://allan2coder.github.io/cubeshop/0.0.17/qr.cb9dd16b.png" width="200" alt="qr.png"><h2>CDN 使用</h2><pre><code class="language-js">&lt;script type=<span class="hljs-string">&quot;module&quot;</span> src=<span class="hljs-string">&quot;https://unpkg.com/cubeshop&quot;</span>&gt;&lt;/script&gt;\n<span class="hljs-comment">// 或</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/cubeshop&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n</code></pre><h2>NPM 使用</h2><p>敬请期待…</p><h2>Vue/React 中使用</h2><p>当作原生 dom 元素直接使用即可。</p><h4>Vue 工程</h4><pre><code class="language-jsx">&lt;template&gt;\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">cs-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">cs-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n&lt;/template&gt;\n</code></pre><h4>React 工程</h4><pre><code class="language-jsx"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Demo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">cs-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">cs-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n    );\n  }\n}\n</code></pre><h2>注意</h2><ul><li>Vue 工程中使用组件可能会出现告警：</li></ul><pre><code class="language-html"><span class="hljs-comment">&lt;!-- vue2: --&gt;</span>\nUnknown custom element: <span class="hljs-tag">&lt;<span class="hljs-name">cs-card</span>&gt;</span> - did you register the component correctly? For recursive components, make sure to provide the &quot;name&quot; option.\n<span class="hljs-comment">&lt;!-- vue3 --&gt;</span>\n[Vue warn]: Failed to resolve component: cs-icon \n</code></pre><p>别急，请在工程中注入如下代码即可：</p><pre><code class="language-js"><span class="hljs-comment">// VUE2.x</span>\nVue.config.ignoredElements = [<span class="hljs-regexp">/^cs-/</span>]\n\n<span class="hljs-comment">// VUE3.x</span>\n<span class="hljs-comment">// https://v3.cn.vuejs.org/guide/migration/global-api.html#config-productiontip-%E7%A7%BB%E9%99%A4</span>\n<span class="hljs-keyword">const</span> app = createApp({})\napp.config.compilerOptions.isCustomElement = <span class="hljs-function"><span class="hljs-params">tag</span> =&gt;</span> tag.startsWith(<span class="hljs-string">&#39;cs-&#39;</span>)\n</code></pre><p>如果您使用的是 vite，修改 vite.config.js:</p><pre><code class="language-js"><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    vue({\n      <span class="hljs-attr">template</span>: {\n        <span class="hljs-attr">compilerOptions</span>: {\n          <span class="hljs-attr">isCustomElement</span>: <span class="hljs-function"><span class="hljs-params">tag</span> =&gt;</span> tag === <span class="hljs-string">&#39;cs-&#39;</span>\n        }\n      }\n    })\n  ]\n}\n</code></pre><h2>Examples</h2><p>为方便演示，直接使用 cdn 加载，工程类项目同样使用。</p><h3>Vue 工程使用</h3><pre><code class="language-html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> Vue demo <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/cubeshop&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- vue cdn 引入 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个 Vue 工程!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">cs-card</span>\n        <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in items&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleClick(item)&quot;</span>\n        <span class="hljs-attr">:image</span>=<span class="hljs-string">&#39;item.image&#39;</span>\n        <span class="hljs-attr">:name</span>=<span class="hljs-string">&#39;item.name&#39;</span>\n        <span class="hljs-attr">:email</span>=<span class="hljs-string">&quot;item.email&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cs-card</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-comment">// 忽略 vue 中自定义标签会告警</span>\n    Vue.config.ignoredElements = [\n      <span class="hljs-string">&#39;user-card&#39;</span>,\n    ]\n    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue({\n      <span class="hljs-attr">el</span>: <span class="hljs-string">&#39;#app&#39;</span>,\n      <span class="hljs-attr">data</span>: {\n        <span class="hljs-attr">items</span>: [{\n          <span class="hljs-attr">image</span>: <span class="hljs-string">&#39;https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455_960_720.jpg&#39;</span>,\n          <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Allan&#39;</span>,\n          <span class="hljs-attr">email</span>: <span class="hljs-string">&#39;Allan@hb.com&#39;</span>,\n        },{\n          <span class="hljs-attr">image</span>: <span class="hljs-string">&#39;https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455_960_720.jpg&#39;</span>,\n          <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;stark&#39;</span>,\n          <span class="hljs-attr">email</span>: <span class="hljs-string">&#39;stark@hb.com&#39;</span>,\n        },{\n          <span class="hljs-attr">image</span>: <span class="hljs-string">&#39;https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455_960_720.jpg&#39;</span>,\n          <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Ray&#39;</span>,\n          <span class="hljs-attr">email</span>: <span class="hljs-string">&#39;Ray@hb.com&#39;</span>,\n        }],\n        <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;test&#39;</span>\n      },\n      <span class="hljs-attr">methods</span>: {\n        <span class="hljs-function"><span class="hljs-title">handleClick</span>(<span class="hljs-params">item</span>)</span>{\n          alert(item);\n        }\n      }\n    })\n  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>\n</code></pre><h3>React 工程使用</h3><pre><code class="language-html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> React demo <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/cubeshop&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- React cdn --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/react/16.13.1/umd/react.production.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/react-dom/16.13.1/umd/react-dom.production.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-comment">&lt;!--  Babel 可以将 ES6 代码转为 ES5 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/babel-standalone/7.0.0-beta.3/babel.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个 React 工程!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript">\n    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n      <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> (\n          <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">cs-card</span>\n              <span class="hljs-attr">image</span>=<span class="hljs-string">&#39;https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455_960_720.jpg&#39;</span>\n              <span class="hljs-attr">name</span>=<span class="hljs-string">&#39;Ray&#39;</span>\n              <span class="hljs-attr">email</span>=<span class="hljs-string">&quot;Ray@hb.com&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cs-card</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n        );\n      }\n    }\n    ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">App</span>/&gt;</span></span>, <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#39;app&#39;</span>));\n  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>\n</code></pre>',27)],t={setup:(n,{expose:t})=>(t({frontmatter:{}}),(n,t)=>(a(),s("div",l,p)))};export{t as default};
